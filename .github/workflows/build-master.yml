# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CNBC Catalyst CI Prod

on:
  push:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm install
      - run: npm run lint
      - run: export JEST_JUNIT_OUTPUT_DIR="./test-reports" && npm run test:ci
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Restore cached node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm run build:dist -- --env.enviroment=prod
      - run: npm run build:ssr -- --env.enviroment=prod
      - run: npm run build:cnbc -- prod
      - name: Cache artifact
        uses: actions/cache@v2
        env:
          cache-name: cache-artifact
        with:
          path: dist/
          key: ${{ github.sha }}-build-prod
          restore-keys: ${{ github.sha }}-build-prod
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Restore cached node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Restore cached artifact
        uses: actions/cache@v2
        env:
          cache-name: cache-artifact
        with:
          path: dist/
          key: ${{ github.sha }}-build-prod
          restore-keys: ${{ github.sha }}-build-prod
      - run: npm run deploy:aws -- prod
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CNBC_AWS_SECRET_KEY_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CNBC_AWS_ACCESS_KEY_ID_PROD }}
  clearcache:
    name: Clear CDN Cache
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - name: Restore cached node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: npm run clear:aws -- prod
        env:
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CNBC_AWS_SECRET_KEY_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.CNBC_AWS_ACCESS_KEY_ID_PROD }}
